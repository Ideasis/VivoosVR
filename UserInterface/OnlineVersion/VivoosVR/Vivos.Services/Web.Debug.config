<?xml version="1.0"?>
<!-- Debug -->
<configuration>
  <configSections>
    <section name="CommonConfiguration" type="Core.Common.Configuration.CommonConfiguration, Core.Common" allowLocation="true" allowDefinition="Everywhere" />
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="ServerConfiguration" type="Core.Server.Configuration.ServerConfiguration, Core.Server" allowLocation="true" allowDefinition="Everywhere" />
    <section name="LogConfiguration" type="Core.Log.Configuration.LogConfiguration, Core.Log" allowLocation="true" allowDefinition="Everywhere" />
    <section name="MailConfiguration" type="Core.Mail.Configuration.MailConfiguration, Core.Mail" allowLocation="true" allowDefinition="Everywhere" />
  </configSections>

  <CommonConfiguration>
    <DefaultUser Username="Default User" Password="21BDE154-16EC-4361-8275-FB29C74276D7" />
  </CommonConfiguration>

  <ServerConfiguration>
    <CacheConfiguration ExpirePeriod="00:05:00" />
  </ServerConfiguration>

  <MailConfiguration TemplatePath="Email">
    <WebAdmin Name="Web Admin" Server="mail.dotnetcup.com" Port="25" EMail="dogu@dotnetcup.com" WindowsIdentityName="dogu@dotnetcup.com" WindowsPassword="Lale4545" />
  </MailConfiguration>

  <LogConfiguration SecurityExceptionMessage="Yetki Hatası." SystemExceptionMessage="Genel Hata." Source="Core.Services" UserWindowSource="UserWindowSource" />

  <system.diagnostics>
    <sharedListeners>
      <add name="DBListener" type="Core.Log.Listeners.DBTraceListener, Core.Log" traceOutputOptions="None" initializeData="data source=mssql11.turhost.com;initial catalog=Vivos;User ID=VivosServiceUser;Password=Port1343;integrated security=False;multipleactiveresultsets=True;"/>
      <add name="DefaultListener" type="Core.Log.Listeners.DefaultTraceListener, Core.Log" traceOutputOptions="DateTime"/>
      <add name="ConsoleListener" type="Core.Log.Listeners.ConsoleTraceListener, Core.Log" initializeData="Core.Services" traceOutputOptions="DateTime"/>
      <add name="FileListener" type="Core.Log.Listeners.FileTraceListener, Core.Log" traceOutputOptions="DateTime" initializeData="c:\Log\"/>
      <add name="XmlListener" type="Core.Log.Listeners.XmlTraceListener, Core.Log" traceOutputOptions="DateTime" initializeData="c:\Log\"/>
      <add name="EventLogListener" type="System.Diagnostics.EventLogTraceListener" initializeData="Core.Services" traceOutputOptions="DateTime"/>
    </sharedListeners>
    <sources>
      <source name="Core.Services" switchValue="All">
        <listeners>
          <clear/>
          <add name="DBListener"></add>
          <!--<add name="FileListener"/>
          <add name="DefaultListener"/>-->
          <add name="EventLogListener"></add>
        </listeners>
      </source>
      <source name="System.ServiceModel" switchValue="Error">
        <listeners>
          <clear/>
          <add name="DBListener"></add>
          <add name="EventLogListener"/>
          <!--<add name="DefaultListener"/>
          <add name="EventLogListener"></add>-->
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" switchValue="Error">
        <listeners>
          <clear />
          <add name="EventLogListener"></add>
          <!--<add name="DefaultListener"></add>-->
          <add name="DBListener"/>
        </listeners>
      </source>
      <source name="UserWindowSource" switchValue="Information">
        <listeners>
          <clear/>
          <add name="DBListener"/>
        </listeners>
      </source>
    </sources>
  </system.diagnostics>

  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>

  <connectionStrings>
    <add name="VivosEntities" connectionString="metadata=res://*/MarketModel.csdl|res://*/MarketModel.ssdl|res://*/MarketModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=mssql11.turhost.com;initial catalog=Vivos;User ID=VivosServiceUser;Password=Port1343;integrated security=False;multipleactiveresultsets=True;application name=EntityFramework&quot;" providerName="System.Data.EntityClient" />
    <add name="CoreEntities" connectionString="metadata=res://*/DataModel.CoreDataModel.csdl|res://*/DataModel.CoreDataModel.ssdl|res://*/DataModel.CoreDataModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=mssql11.turhost.com;initial catalog=Vivos;user id=VivosServiceUser;password=Port1343;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
    <add name="VivosModel" connectionString="data source=mssql11.turhost.com;initial catalog=Vivos;User ID=VivosServiceUser;Password=Port1343;integrated security=False;MultipleActiveResultSets=True;App=EntityFramework" providerName="System.Data.SqlClient" />
  </connectionStrings>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>

  <system.web>
    <compilation debug="true" targetFramework="4.6"/>
    <httpRuntime targetFramework="4.6"/>
  </system.web>

  <system.serviceModel>

    <serviceHostingEnvironment multipleSiteBindingsEnabled="true">
      <serviceActivations>
        <add service="Core.Server.Services.OrganizationService" relativeAddress="Core.Server.Services.OrganizationService.svc" />
        <add service="Core.Server.Services.SessionService" relativeAddress="Core.Server.Services.SessionService.svc" />
        <add service="Market.Server.PublicMarketService" relativeAddress="Market.Server.PublicMarketService.svc"/>
      </serviceActivations>
    </serviceHostingEnvironment>

    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" />
      <endToEndTracing activityTracing="true" messageFlowTracing="true" propagateActivity="true" />
    </diagnostics>

    <services>
      <service behaviorConfiguration="UsernamePasswordBehavior" name="Core.Server.Services.OrganizationService">
        <host>
          <baseAddresses>
            <add baseAddress="localhost"/>
          </baseAddresses>
        </host>
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="wsHttpBindingConfig" contract="Core.Common.Services.IOrganizationService">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange">
        </endpoint>
      </service>

      <service behaviorConfiguration="UsernamePasswordBehavior" name="Core.Server.Services.SessionService">
        <host>
          <baseAddresses>
            <add baseAddress="localhost"/>
          </baseAddresses>
        </host>
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="wsHttpBindingConfig" contract="Core.Common.Services.ISessionService">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange">
        </endpoint>
      </service>
      <service behaviorConfiguration="UsernamePasswordBehavior" name="Market.Server.PublicMarketService">
        <host>
          <baseAddresses>
            <add baseAddress="localhost"/>
          </baseAddresses>
        </host>
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="wsHttpBindingConfig" contract="Core.Common.Services.IPublicMarketService">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>

    </services>
    <bindings>
      <wsHttpBinding>
        <binding name="wsHttpBindingConfig" openTimeout="10:00:00" closeTimeout="10:00:00" receiveTimeout="10:00:00" sendTimeout="10:00:00" maxReceivedMessageSize="1000000">
          <security mode="Message">
            <message clientCredentialType="UserName" />
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="UsernamePasswordBehavior">
          <!-- + Güvenliği iptal etmek için bu kısım iptal edilecek -->
          <serviceSecurityAudit auditLogLocation="Application" serviceAuthorizationAuditLevel="SuccessOrFailure" messageAuthenticationAuditLevel="SuccessOrFailure" suppressAuditFailure="false" />
          <serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType="Core.Server.Tools.UserNameValidator, Core.Server" />
            <serviceCertificate findValue="localhost" storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectName" />
          </serviceCredentials>
          <serviceAuthorization serviceAuthorizationManagerType="Core.Server.Tools.AuthorizationManager, Core.Server">
            <authorizationPolicies>
              <add policyType="Core.Server.Tools.AuthorizationPolicy, Core.Server" />
            </authorizationPolicies>
          </serviceAuthorization>
          <!-- - Güvenliği iptal etmek için bu kısım iptal edilecek -->
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <protocolMapping>
      <add binding="wsHttpBinding" scheme="http" />
    </protocolMapping>
    <!-- + Güvenliği iptal etmek için bu kısım iptal edilecek -->
    <extensions>
      <behaviorExtensions>
        <add name="coreErrorHandlerBehaviorExtension" type="Core.Server.CoreErrorHandlerBehaviorExtension, Core.Server" />
      </behaviorExtensions>
    </extensions>
    <!-- - Güvenliği iptal etmek için bu kısım iptal edilecek -->
  </system.serviceModel>

  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Reactive.Interfaces" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.4.0" newVersion="2.2.4.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Reactive.Core" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.4.0" newVersion="2.2.4.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Reactive.Linq" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.4.0" newVersion="2.2.4.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Reactive.PlatformServices" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.4.0" newVersion="2.2.4.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>


</configuration>