// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ConsoleApplication1.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class CoreApplicationUser
    {
        /// <summary>
        /// Initializes a new instance of the CoreApplicationUser class.
        /// </summary>
        public CoreApplicationUser() { }

        /// <summary>
        /// Initializes a new instance of the CoreApplicationUser class.
        /// </summary>
        public CoreApplicationUser(User user = default(User), string email = default(string), bool? emailConfirmed = default(bool?), string passwordHash = default(string), string securityStamp = default(string), string phoneNumber = default(string), bool? phoneNumberConfirmed = default(bool?), bool? twoFactorEnabled = default(bool?), DateTime? lockoutEndDateUtc = default(DateTime?), bool? lockoutEnabled = default(bool?), int? accessFailedCount = default(int?), IList<IdentityUserRole> roles = default(IList<IdentityUserRole>), IList<IdentityUserClaim> claims = default(IList<IdentityUserClaim>), IList<IdentityUserLogin> logins = default(IList<IdentityUserLogin>), string id = default(string), string userName = default(string))
        {
            User = user;
            Email = email;
            EmailConfirmed = emailConfirmed;
            PasswordHash = passwordHash;
            SecurityStamp = securityStamp;
            PhoneNumber = phoneNumber;
            PhoneNumberConfirmed = phoneNumberConfirmed;
            TwoFactorEnabled = twoFactorEnabled;
            LockoutEndDateUtc = lockoutEndDateUtc;
            LockoutEnabled = lockoutEnabled;
            AccessFailedCount = accessFailedCount;
            Roles = roles;
            Claims = claims;
            Logins = logins;
            Id = id;
            UserName = userName;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "User")]
        public User User { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Email")]
        public string Email { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EmailConfirmed")]
        public bool? EmailConfirmed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PasswordHash")]
        public string PasswordHash { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SecurityStamp")]
        public string SecurityStamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PhoneNumber")]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PhoneNumberConfirmed")]
        public bool? PhoneNumberConfirmed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TwoFactorEnabled")]
        public bool? TwoFactorEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LockoutEndDateUtc")]
        public DateTime? LockoutEndDateUtc { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LockoutEnabled")]
        public bool? LockoutEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccessFailedCount")]
        public int? AccessFailedCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Roles")]
        public IList<IdentityUserRole> Roles { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Claims")]
        public IList<IdentityUserClaim> Claims { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Logins")]
        public IList<IdentityUserLogin> Logins { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UserName")]
        public string UserName { get; set; }

    }
}
