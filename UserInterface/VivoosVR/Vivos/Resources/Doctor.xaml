<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:loading="clr-namespace:LoadingIndicators.WPF;assembly=LoadingIndicators.WPF" xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls">
    <ResourceDictionary.MergedDictionaries>

        <!-- 
            MahApps Styles: https://github.com/MahApps/MahApps.Metro/tree/develop/MahApps.Metro/Styles 
        -->

        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />

        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Amber.xaml" />
        
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />

        <ResourceDictionary Source="/Resources/Icons.xaml" />
        <ResourceDictionary Source="/Resources/ToggleButton.xaml" />

        <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles.xaml" />
        <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles/LoadingArcs.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Color x:Key="AccentColor">#f3b53b</Color>

    <Color x:Key="AccentColor2">#7e5e1e</Color>
    <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource AccentColor2}"  />
    
    <SolidColorBrush x:Key="AccentBaseColorBrush" Color="{StaticResource AccentColor}"/>
    <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource AccentColor}" />

    <Style x:Key="CellRightAlign">
        <Setter Property="Control.HorizontalAlignment" Value="Right" />
    </Style>

    <Style x:Key="ErrorText" TargetType="TextBlock">
        <Setter Property="Margin" Value="5,20,0,20" />
        <Setter Property="Foreground" Value="#FFAC0000" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
        <!--<Setter Property="Background" Value="#fffcfcfc"></Setter>-->
        <!--<Setter Property="Padding" Value="5"></Setter>-->
        <Setter Property="Opacity" Value="0.0" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Binding.TargetUpdated">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation AccelerationRatio="0.9" AutoReverse="False" Duration="0:0:3" From="1.0" Storyboard.TargetProperty="Opacity" To="0.0" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!--<Style x:Key="FadeInControl" TargetType="FrameworkElement">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Binding.TargetUpdated">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation AccelerationRatio="0.9" AutoReverse="False" Duration="0:0:2" From="0.0" Storyboard.TargetProperty="Opacity" To="1.0" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>-->

    <Style BasedOn="{StaticResource LoadingIndicatorArcsStyle}" TargetType="loading:LoadingIndicator" />

    <Style TargetType="Control">
        <Setter Property="FontFamily" Value="Segoe UI Semibold" />
    </Style>
    
    

    <Style TargetType="TextBox" BasedOn="{StaticResource ResourceKey=MetroTextBox}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{StaticResource AccentColorBrush}"></Setter>
        
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                <Setter Property="Tag" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel>
                                <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1">
                                    <AdornedElementPlaceholder x:Name="controlWithError"/>
                                </Border>
                                    <Border Padding="5,3,3,3" BorderThickness="0">
                                        <TextBlock Padding="2" Text="{Binding ElementName=controlWithError, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" Background="{DynamicResource AccentColorBrush}" VerticalAlignment="Center" Foreground="White" TextWrapping="Wrap"></TextBlock>
                                    </Border>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DatePicker" BasedOn="{StaticResource ResourceKey=MetroDatePicker}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{StaticResource AccentColorBrush}"></Setter>

        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                <Setter Property="Tag" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel>
                                <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1">
                                    <AdornedElementPlaceholder x:Name="controlWithError"/>
                                </Border>
                                <TextBlock Padding="2" Text="{Binding ElementName=controlWithError, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" Background="{DynamicResource AccentColorBrush}" VerticalAlignment="Bottom" Foreground="White" Margin="8,3,8,3" TextWrapping="Wrap"/>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontSize" Value="14" />
    </Style>

    

    <Style BasedOn="{StaticResource MetroDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal" />
    </Style>

    <Style TargetType="Image">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                <Setter Property="Tag" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel>
                                <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1">
                                    <AdornedElementPlaceholder x:Name="controlWithError"/>
                                </Border>
                                <TextBlock Padding="5" Text="{Binding ElementName=controlWithError, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" Background="{DynamicResource AccentColorBrush}" VerticalAlignment="Bottom" Foreground="White" Margin="8,3,8,3" TextWrapping="Wrap"/>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        
    </Style>

</ResourceDictionary>